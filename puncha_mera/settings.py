"""
Django settings for puncha_mera project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import dj_database_url
from google.cloud import secretmanager
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# GCP Secret Manager settings
# Make sure to set the GOOGLE_CLOUD_PROJECT environment variable.
# Example: export GOOGLE_CLOUD_PROJECT=your-gcp-project-id
#
# You also need to install the following libraries:
# pip install google-cloud-secret-manager dj-database-url
try:
    # Create the Secret Manager client.
    client = secretmanager.SecretManagerServiceClient()

    # Get the project id from the environment variable.
    project_id = os.environ.get("GOOGLE_CLOUD_PROJECT")

    def get_secret(secret_id, version_id="latest"):
        """
        Get a secret from Google Cloud Secret Manager.
        """
        name = f"projects/{project_id}/secrets/{secret_id}/versions/{version_id}"
        response = client.access_secret_version(request={"name": name})
        return response.payload.data.decode("UTF-8")

    SECRET_KEY = get_secret("django-secret-key")
    DATABASE_URL = get_secret("database-url")
    STRIPE_API_KEY = get_secret("stripe-api-key")
    STRIPE_WEBHOOK_SECRET = get_secret("stripe-webhook-secret")

    DATABASES = {
        'default': dj_database_url.config(default=DATABASE_URL)
    }

    # Production security settings
    DEBUG = False
    ALLOWED_HOSTS = [get_secret("allowed-hosts")] # e.g., "your-domain.com,www.your-domain.com"
    CSRF_TRUSTED_ORIGINS = [f'https://{host}' for host in ALLOWED_HOSTS]
except Exception as e:
    print(f"Error getting secrets from Google Cloud Secret Manager: {e}")
    # Fallback to default settings for local development
    SECRET_KEY = 'django-insecure-bt)t--mal86+6@d%!@y(qt9erxolvw070q%%4c@&us#kejeg-!'
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
    # Local development security settings
    DEBUG = True
    ALLOWED_HOSTS = ['8080-cs-04265eee-570c-41b3-94f9-e53a43701d5f.cs-europe-west4-pear.cloudshell.dev', '127.0.0.1', 'localhost']
    CSRF_TRUSTED_ORIGINS = ['https://8080-cs-04265eee-570c-41b3-94f9-e53a43701d5f.cs-europe-west4-pear.cloudshell.dev']
    STRIPE_API_KEY = "your_local_stripe_api_key" # Use test keys for local dev
    STRIPE_WEBHOOK_SECRET = "your_local_stripe_webhook_secret" # Use test keys for local dev


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['8000-cs-953777466757-default.cs-europe-west4-bhnf.cloudshell.dev', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://8000-cs-953777466757-default.cs-europe-west4-bhnf.cloudshell.dev']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'time_stamp',
    'time_entries',
    'accounts',
    'projects',
    'reports',
    'daily_earnings',
    'income_calculator',
    'invoices',
    'analytics',
    'schedule',
    'retail',
    'pmail',
    'subscriptions',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'crispy_forms',
    'crispy_bootstrap5',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'puncha_mera.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'puncha_mera.wsgi.application'





# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# allauth settings
SITE_ID = 1

LOGIN_URL = '/auth/login/'
LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

AUTH_USER_MODEL = 'accounts.CustomUser'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Stripe
